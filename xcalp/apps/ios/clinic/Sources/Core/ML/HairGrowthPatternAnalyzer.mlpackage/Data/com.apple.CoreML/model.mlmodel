// Xcode Core ML model specification

name: "HairGrowthPatternAnalyzer"
version: "1.0"
shortDescription: "Hair growth pattern analyzer for clinical assessment"
author: "XCalp"
license: "Proprietary"

inputDescription {
  features {
    name: "meshData"
    shortDescription: "3D mesh data of the scalp surface"
    type: MLFeatureTypeMultiArray
    shape: [1, 100, 100, 4] // Resolution 100x100, 4 channels (x,y,z,curvature)
  }
}

outputDescription {
  features {
    name: "direction"
    shortDescription: "Primary growth direction vector"
    type: MLFeatureTypeMultiArray
    shape: [3] // 3D direction vector
    
    name: "confidence"
    shortDescription: "Confidence score of the prediction"
    type: MLFeatureTypeDouble
  }
}

trainingInputDescription {
  features {
    name: "meshData"
    shortDescription: "3D mesh data of the scalp surface"
    type: MLFeatureTypeMultiArray
    shape: [1, 100, 100, 4]
  }
  
  features {
    name: "direction"
    shortDescription: "Ground truth growth direction"
    type: MLFeatureTypeMultiArray
    shape: [3]
  }
}

metadata {
  userDefined {
    key: "com.xcalp.modelType"
    value: "growthPattern"
    
    key: "com.xcalp.resolution"
    value: "100x100"
    
    key: "com.xcalp.inputChannels"
    value: "position_xyz_curvature"
    
    key: "com.xcalp.modelPurpose"
    value: "hairGrowthAnalysis"
  }
}

neuralNetworkOptimizer {
  optimizations {
    type: MLNeuralNetworkOptimizerTypeQuantization
    options {
      quantizationOptions {
        mode: MLQuantizationModeLinearQuantization
        nbits: 8
      }
    }
  }
}

modelParameters {
  neuralNetwork {
    layers {
      // Encoder layers
      convolution {
        name: "conv1"
        input: "meshData"
        output: "conv1_out"
        kernelSize: [3, 3]
        outputChannels: 32
        stride: [1, 1]
        padding: [1, 1]
        activation: RELU
      }
      
      maxPool {
        name: "pool1"
        input: "conv1_out"
        output: "pool1_out"
        kernelSize: [2, 2]
        stride: [2, 2]
      }
      
      // ... Additional layers for pattern detection ...
      
      // Final direction prediction layers
      dense {
        name: "direction_fc"
        input: "flatten_out"
        output: "direction_out"
        outputChannels: 3
        activation: TANH
      }
      
      dense {
        name: "confidence_fc"
        input: "flatten_out"
        output: "confidence_out"
        outputChannels: 1
        activation: SIGMOID
      }
    }
  }
}